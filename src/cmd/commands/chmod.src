chmod = function
  cli = new gsh.Cli
  cli.init(
    "Chmod",
    "chmod",
    true,
    true,
    true)


  // ////////////////////////////////////////////////
  // Exec                                          //
  // ////////////////////////////////////////////////
  cli.exec = function(params)
    // functions ////////////////////////////////////

    // main ////////////////////////////////////
    self.parseParams(params)
    if self.options.help then return 

    log = @self.logger.log

    if not self.args or not self.args.len > 1 then
      return self.logger.error("expects 2 parameters")
    end if

    file = gsh.getFile(gsh.normalize(self.args[1]))

    if not file then return self.logger.error("no such file or directory")

    perms = {
      "0": "-rwx",
      "1": "+x",
      "2": "+w",
      "3": "+wx",
      "4": "+r",
      "5": "+rx",
      "6": "+rw",
      "7": "+rwx",
    }

    permissions = self.args[0]
    if not self.options.recursive then self.options.recursive = false

    if typeof(permissions[0].to_int) == "string" then
      res = file.chmod(permissions, self.options.recursive)
    else
      if permissions.len != 3 then return self.logger.error("wrong permissions format")
      permsList = []
      for p in permissions
        if not perms.hasIndex(p) then return self.logger.error("wrong permissions format")
        permsList.push(perms[p])
      end for
      file.chmod("u-rwx", self.options.recursive)
      file.chmod("g-rwx", self.options.recursive)
      file.chmod("o-rwx", self.options.recursive)
      file.chmod("u" + permsList[0], self.options.recursive)
      file.chmod("g" + permsList[1], self.options.recursive)
      res = file.chmod("o" + permsList[2], self.options.recursive)
    end if

    if res != "" then return self.logger.error(res)

    return file

  end function


  // ////////////////////////////////////////////////
  // Config                                          //
  // ////////////////////////////////////////////////

  opts = {}
  opts.help = new cli.CliOption + {
    "name": "--help",
    "alias": "-h",
    "description": "Show this screen",
  }
  opts.silent = new cli.CliOption + {
    "name": "--silent",
    "description": "Silent output",
  }
  opts.recursive = new cli.CliOption + {
    "name": "--recursive",
    "alias": "-R",
    "description": "Recursive mode",
  }
  cli.definition.options = opts
  cli.definition.usages = [
    "chmod [OPTION]... <permissions> <file>",
    "chmod u+rwx /home/guest/foo.exe",
    "chmod -R g-rwx ./forbidden",
    "chmod -R 700 /bin",
  ]
  cli.definition.sections = [
    "",
    "Change permissions of a file or a folder",
    "Permissions can be write with 2 formats :",
    "  - (u|g|o)(+|-)(rwx) format",
    "  - number format, e.g: 744 = rwx r-- r--",
  ]

  return cli
end function